// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MiniProject.Model;
//
//    var user = User.FromJson(jsonString);

namespace MiniProject.Model
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class User
    {
        [JsonProperty("student")]
        public Student Student { get; set; }

        [JsonProperty("registration")]
        public Registration Registration { get; set; }

        [JsonProperty("subject")]
        public List<Subject> Subject { get; set; }
    }

    public partial class Registration
    {
        [JsonProperty("academic_year")]
        public long AcademicYear { get; set; }

        [JsonProperty("terms")]
        public List<Term> Terms { get; set; }
    }

    public partial class Term
    {
        [JsonProperty("term")]
        public long TermTerm { get; set; }

        [JsonProperty("courses")]
        public List<Course> Courses { get; set; }
    }

    public partial class Course
    {
        [JsonProperty("course_id")]
        public string CourseId { get; set; }

        [JsonProperty("course_name")]
        public string CourseName { get; set; }

        [JsonProperty("credits")]
        public long Credits { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Student
    {
        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("password")]
        public string Password { get; set; }

        [JsonProperty("img")]
        public string Img { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("gpax")]
        public double Gpax { get; set; }

        [JsonProperty("faculty")]
        public string Faculty { get; set; }

        [JsonProperty("program")]
        public string Program { get; set; }

        [JsonProperty("graduated_from")]
        public string GraduatedFrom { get; set; }

        [JsonProperty("advisor")]
        public string Advisor { get; set; }
    }

    public partial class Subject
    {
        [JsonProperty("course_id")]
        public string CourseId { get; set; }

        [JsonProperty("course_name")]
        public string CourseName { get; set; }

        [JsonProperty("credits")]
        public long Credits { get; set; }
    }

    public partial class User
    {
        public static User FromJson(string json) => JsonConvert.DeserializeObject<User>(json, MiniProject.Model.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this User self) => JsonConvert.SerializeObject(self, MiniProject.Model.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
